version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: gymflow_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gymflow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: gymflow_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
      - JWT_SECRET=seu-secret-super-seguro-aqui-123456
      - DB_URL=postgresql://postgres:postgres@db:5432/gymflow?schema=public
      - CORS_ORIGIN=http://localhost:3000
      - COOKIE_NAME=gf_token
      - BCRYPT_SALT_ROUNDS=10
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npx prisma db push --skip-generate && npm run start"

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:4000
    container_name: gymflow_frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  pgdata:
